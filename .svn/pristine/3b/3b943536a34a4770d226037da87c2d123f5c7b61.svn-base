//
//  QQContactViewController.m
//  MTreeViewFramework
//
//  Created by Micker on 16/3/31.
//  Copyright © 2016年 micker. All rights reserved.
//

#import "ZuZhiJiaGouContr.h"
#import <QuartzCore/QuartzCore.h>
#import "XICommonDef.h"
#import "StaffInfoContr.h"

#define DegreesToRadians(degrees) (degrees * M_PI / 180)

static NSString *QQContactViewControllerNode = @"QQContactViewControllerNode";

@interface ContactsTableViewCell : UITableViewCell

@property (weak, nonatomic) UILabel *nameLabel;
@property (weak, nonatomic) UILabel *detailLabel;
@property (weak, nonatomic) UILabel *envLabel;
@property (weak, nonatomic) UIImageView *userImageView;

@end

@implementation ContactsTableViewCell

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{
    if (self = [super initWithStyle:style reuseIdentifier:reuseIdentifier]) {
        [self initUI];
    }
    return self;
}

- (void)initUI
{
    [self createUI];
    [self bindUIValue];
}

- (void)createUI
{
    UILabel *nameLabel = [[UILabel alloc] init];
    UILabel *detailLabel = [[UILabel alloc] init];
    UILabel *envLabel = [[UILabel alloc] init];
    UIImageView *userImageView = [[UIImageView alloc] init];
    
    [self.contentView addSubview:nameLabel];
    [self.contentView addSubview:detailLabel];
    [self.contentView addSubview:envLabel];
    [self.contentView addSubview:userImageView];
    
    _nameLabel = nameLabel;
    _detailLabel = detailLabel;
    _envLabel = envLabel;
    _userImageView = userImageView;
}

- (void)bindUIValue
{
    _nameLabel.font = [UIFont systemFontOfSize:15];
    
    _detailLabel.font = [UIFont systemFontOfSize:12];
    _detailLabel.textColor = RGB(102, 102, 102);
}

- (void)layoutSubviews
{
    [super layoutSubviews];
    
    [self layoutUI];
}

- (void)layoutUI
{
    CGFloat w = self.bounds.size.width;
    CGFloat h = self.bounds.size.height;
    
    CGFloat imageViewLeftMargin = w/12;
    CGFloat imageViewH = h*0.8, imageViewW = imageViewH, imageViewX = imageViewLeftMargin, imageViewY = (h-imageViewH)/2;
    _userImageView.frame = CGRectMake(imageViewX, imageViewY, imageViewW, imageViewH);
    
    CGFloat nameTopMarginToImageViewTop = imageViewH/12;
    CGFloat nameLeftMarginToImageViewRight = imageViewW/5;
    CGFloat ratio = 0.65;
    CGFloat nameW = w-2*imageViewLeftMargin-imageViewW-nameLeftMarginToImageViewRight, nameH = (imageViewH-2*nameTopMarginToImageViewTop)*ratio, nameX = imageViewX+imageViewW+nameLeftMarginToImageViewRight, nameY = imageViewY+nameTopMarginToImageViewTop;
    _nameLabel.frame = CGRectMake(nameX, nameY, nameW, nameH);
    
    CGFloat descW = nameW, descH = (imageViewH-2*nameTopMarginToImageViewTop)*(1-ratio), descX = nameX, descY = nameY+nameH;
    _detailLabel.frame = CGRectMake(descX, descY, descW, descH);
}

@end


@implementation ZuZhiJiaGouContr
{
    CGFloat _cellHeight;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self initIvar];
    [self bindUIValue];
}

- (void)initIvar
{
    _cellHeight = SCREEN_WIDTH*0.12;
}

- (void)bindUIValue
{
    self.title = @"组织架构";
    self.treeView.tableFooterView = [[UIView alloc] init];
}

- (void) doConfigTreeView {
    self.treeView.rowHeight = 60.0f;
    self.treeView.rootNode = [MTreeNode initWithParent:nil expand:NO];
    
    NSArray *sectionData = @[@{@"title":@"董事科", @"num":@"4"},
                             @{@"title":@"行政科", @"num":@"4"},
                             @{@"title":@"人事科", @"num":@"4"},
                             @{@"title":@"医技科", @"num":@"4"},
                             @{@"title":@"放射科", @"num":@"4"}];
    
    for (NSUInteger i = 0; i < [sectionData count]; i++) {
        MTreeNode *node = [MTreeNode initWithParent:self.treeView.rootNode expand:(2 == i)];
        for (int j = 0; j < 4; j++) {
            MTreeNode *subnode = [MTreeNode initWithParent:node expand:NO];
            subnode.content = @{@"nickname":@"用户x", @"portraitUri":@"login_header_avatarPlaceholder", @"desc":@"xx部门xx职位"};
            [node.subNodes addObject:subnode];
        }
        node.content = sectionData[i];
        [self.treeView.rootNode.subNodes addObject:node];
    }
}

#pragma mark - UITableView delegate

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 50;
}

// 伪分组
//- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
//    return 1 == section ? 20 : 0.1f ;
//}
//
//- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
//    UIView *footerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, CGRectGetMaxX(self.view.bounds), 1 == section ? 20 : 0.1f)];
//    footerView.alpha = 0;
//    return footerView;
//}

- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    MTreeNode *subNode = [[self.treeView.rootNode subNodes] objectAtIndex:section];
    NSDictionary *nodeData = subNode.content;
    
    CGFloat h = 50;
    CGFloat w = tableView.bounds.size.width;
    UIView *sectionView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, CGRectGetMaxX(self.view.bounds), h)];
    sectionView.tag = 1000 + section;
    UITapGestureRecognizer *recognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(sectionTaped:)];
    [sectionView addGestureRecognizer:recognizer];
    sectionView.backgroundColor = [UIColor whiteColor];
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 0, CGRectGetMaxX(self.view.bounds), 0.5)];
    line.backgroundColor = [UIColor lightGrayColor];
    line.alpha = 0.5f;
    [sectionView addSubview:line];
    
    // arrow
    CGFloat arrowLeftMargin = w/24;
    CGFloat arrowH = h*0.2, arrowW = arrowH*0.8, arrowX = arrowLeftMargin, arrowY = (h-arrowH)/2;
    UIImageView *tipImageView = [[UIImageView alloc] initWithFrame:CGRectMake(arrowX, arrowY, arrowW, arrowH)];
    tipImageView.image = [UIImage imageNamed:@"common_rightItem"];
    tipImageView.tag = 10;
    [sectionView addSubview:tipImageView];
    [self doTipImageView:tipImageView expand:subNode.expand];
    
    // title
    CGFloat titleLeftMarginToArrowRight = arrowLeftMargin;
    CGFloat titleW = w-2*arrowLeftMargin-titleLeftMarginToArrowRight-arrowW, titleH = h*0.6, titleX = arrowX+arrowW+titleLeftMarginToArrowRight, titleY = (h-titleH)/2;
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(titleX, titleY, titleW, titleH)];
    label.font = [UIFont systemFontOfSize:15];
    label.tag = 20;
    
    NSString *title = nodeData[@"title"];
    NSString *num = [NSString stringWithFormat:@"  (%@)", nodeData[@"num"]];
    NSMutableAttributedString *titleText = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@%@", title, num]];
    [titleText addAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:11]} range:NSMakeRange(title.length, num.length)];
    [titleText addAttributes:@{NSForegroundColorAttributeName:RGB(102, 102, 102)} range:NSMakeRange(title.length, num.length)];
    label.attributedText = titleText;
    [sectionView addSubview:label];
    
    return sectionView;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    MTreeNode *subNode = [self.treeView nodeAtIndexPath:indexPath];
    NSDictionary *nodeData = subNode.content;
    ContactsTableViewCell *cell = (ContactsTableViewCell *)[tableView dequeueReusableCellWithIdentifier:QQContactViewControllerNode];
    if (cell==nil) {
        cell = [[ContactsTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:QQContactViewControllerNode];
    }
    cell.nameLabel.text = nodeData[@"nickname"];
    cell.detailLabel.text = nodeData[@"desc"];
    cell.userImageView.image = [UIImage imageNamed:nodeData[@"portraitUri"]];
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [self.treeView expandNodeAtIndexPath:indexPath];
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
//    MTreeNode *node = [self.treeView nodeAtIndexPath:indexPath];
    StaffInfoContr *c = [[StaffInfoContr alloc] init];
    [self.navigationController pushViewController:c animated:YES];
}

#pragma mark - Action

- (void) doTipImageView:(UIImageView *)imageView expand:(BOOL) expand {
    [UIView animateWithDuration:0.2f animations:^{
        imageView.transform = (expand) ? CGAffineTransformMakeRotation(DegreesToRadians(90)) : CGAffineTransformIdentity;
    }];
}

- (void)sectionTaped:(UIGestureRecognizer *) recognizer {
    UIView *view = recognizer.view;
    NSUInteger tag = view.tag - 1000;
    UIImageView *tipImageView = [view viewWithTag:10];
    MTreeNode *subNode = [self.treeView nodeAtIndexPath:[NSIndexPath indexPathForRow:-1 inSection:tag]];
    [self.treeView expandNodeAtIndexPath:[NSIndexPath indexPathForRow:-1 inSection:tag]];
    [self doTipImageView:tipImageView expand:subNode.expand];
}

@end
